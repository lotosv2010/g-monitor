{"version":3,"file":"index.js","sources":["../src/performance.ts"],"sourcesContent":["class GPerformance {\n  private performance: Performance = window.performance;\n  \n  constructor() {\n    // this.init();\n    this.init();\n  }\n\n  init() {\n    if (!this.performance) return;\n    // Move getNavigationTiming inside the load event listener to ensure loadEventEnd is captured correctly\n    window.addEventListener(\"load\", () => {\n      // Delay the execution slightly to ensure loadEventEnd is captured\n      setTimeout(() => {\n        this.getNavigationTiming();\n      }, 0);\n    });\n    this.getResourceTiming();\n    this.getPaintTiming();\n    this.getLCP();\n  }\n\n  // 新版性能指标获取方式\n  private getNavigationTiming() {\n    const [navigationEntry] = this.performance.getEntriesByType(\n      \"navigation\"\n    ) as PerformanceNavigationTiming[];\n\n    if (navigationEntry) {\n      const metrics = {\n        // 关键时间节点\n        startTime: navigationEntry.startTime,\n        redirectStart: navigationEntry.redirectStart,\n        redirectEnd: navigationEntry.redirectEnd,\n        domainLookupStart: navigationEntry.domainLookupStart,\n        domainLookupEnd: navigationEntry.domainLookupEnd,\n        connectStart: navigationEntry.connectStart,\n        connectEnd: navigationEntry.connectEnd,\n        secureConnectionStart: navigationEntry.secureConnectionStart,\n        requestStart: navigationEntry.requestStart,\n        responseStart: navigationEntry.responseStart,\n        responseEnd: navigationEntry.responseEnd,\n        domInteractive: navigationEntry.domInteractive,\n        domContentLoadedEventStart: navigationEntry.domContentLoadedEventStart,\n        domContentLoadedEventEnd: navigationEntry.domContentLoadedEventEnd,\n        domComplete: navigationEntry.domComplete,\n        loadEventStart: navigationEntry.loadEventStart,\n        loadEventEnd: navigationEntry.loadEventEnd,\n\n        // 计算关键指标\n        dnsTime: navigationEntry.domainLookupEnd - navigationEntry.domainLookupStart,\n        tcpTime: navigationEntry.connectEnd - navigationEntry.connectStart,\n        ttfb: navigationEntry.responseStart - navigationEntry.requestStart,\n        fullLoadTime: navigationEntry.loadEventEnd - navigationEntry.startTime,\n        domReadyTime: navigationEntry.domContentLoadedEventEnd - navigationEntry.startTime,\n      };\n\n      console.log(\"Navigation Timing:\", metrics);\n      return metrics;\n    }\n  }\n\n  // 资源加载性能\n  private getResourceTiming() {\n    const resources = this.performance.getEntriesByType(\n      \"resource\"\n    ) as PerformanceResourceTiming[];\n\n    const resourceMetrics = resources.map(resource => ({\n      name: resource.name,\n      duration: resource.duration,\n      initiatorType: resource.initiatorType,\n      transferSize: resource.transferSize,\n      encodedBodySize: resource.encodedBodySize,\n      decodedBodySize: resource.decodedBodySize,\n      startTime: resource.startTime,\n      responseEnd: resource.responseEnd\n    }));\n\n    console.log(\"Resource Timing:\", resourceMetrics);\n    return resourceMetrics;\n  }\n\n  // 获取 Paint Timing (FP/FCP) using PerformanceObserver\n  getPaintTiming() {\n    const paintObserver = new PerformanceObserver((list) => {\n      const entries = list.getEntries();\n      const firstPaint = entries.find(e => e.name === \"first-paint\");\n      const firstContentfulPaint = entries.find(e => e.name === \"first-contentful-paint\");\n      const result = {\n        firstPaint: firstPaint?.startTime,\n        firstContentfulPaint: firstContentfulPaint?.startTime\n      };\n      console.log(\"Paint Timing:\", result);\n    });\n    paintObserver.observe({ type: \"paint\", buffered: true });\n  }\n\n  // 获取 LCP (Largest Contentful Paint) using PerformanceObserver\n  private getLCP() {\n    const lcpObserver = new PerformanceObserver((list) => {\n      const entries = list.getEntries();\n      const lastEntry: any = entries[entries.length - 1];\n      console.log('LCP:', lastEntry.renderTime || lastEntry.startTime);\n    });\n    lcpObserver.observe({ type: 'largest-contentful-paint', buffered: true });\n  }\n}\n\nexport default GPerformance;"],"names":[],"mappings":"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"}